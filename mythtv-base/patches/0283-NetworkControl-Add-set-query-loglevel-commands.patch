diff -Naur mythtv-master-20210518-gc8c226c9b4-old/mythtv/programs/mythfrontend/networkcontrol.cpp mythtv-master-20210518-gc8c226c9b4-new/mythtv/programs/mythfrontend/networkcontrol.cpp
--- mythtv-master-20210518-gc8c226c9b4-old/mythtv/programs/mythfrontend/networkcontrol.cpp	2021-05-18 16:13:13.346666603 +0200
+++ mythtv-master-20210518-gc8c226c9b4-new/mythtv/programs/mythfrontend/networkcontrol.cpp	2021-05-18 16:13:16.539999937 +0200
@@ -961,6 +961,10 @@
     {
         return verboseString;
     }
+    else if (is_abbrev("loglevel", nc->getArg(1)))
+    {
+        return logLevelGetName(logLevel);
+    }
     else if (is_abbrev("liveTV", nc->getArg(1)))
     {
         if(nc->getArgCount() == 3) // has a channel ID
@@ -1109,6 +1113,47 @@
 
         return result;
     }
+    else if (nc->getArg(1) == "loglevel")
+    {
+        if (nc->getArgCount() < 3)
+            return QString("ERROR: Missing loglevel name.");
+
+        if (nc->getArgCount() > 3)
+            return QString("ERROR: Excess args.");
+
+        QString oldLoglevel = logLevelGetName(logLevel);
+        const QString &newLogLevel = nc->getArg(2);
+
+        if (newLogLevel == logLevelGetName(LOG_EMERG))
+            logLevel = LOG_EMERG;
+        else if (newLogLevel == logLevelGetName(LOG_ALERT))
+            logLevel = LOG_ALERT;
+        else if (newLogLevel == logLevelGetName(LOG_CRIT))
+            logLevel = LOG_CRIT;
+        else if (newLogLevel == logLevelGetName(LOG_ERR))
+            logLevel = LOG_ERR;
+        else if (newLogLevel == logLevelGetName(LOG_WARNING))
+            logLevel = LOG_WARNING;
+        else if (newLogLevel == logLevelGetName(LOG_WARNING))
+            logLevel = LOG_NOTICE;
+        else if (newLogLevel == logLevelGetName(LOG_INFO))
+            logLevel = LOG_INFO;
+        else if (newLogLevel == logLevelGetName(LOG_DEBUG))
+            logLevel = LOG_DEBUG;
+        else
+            return "ERROR: Invalid loglevel.";
+
+        QString result = "OK";
+        result += "\r\n";
+        result += " Previous loglevel: " + oldLoglevel + "\r\n";
+        result += "      New loglevel: " + logLevelGetName(logLevel) + "\r\n";
+
+        LOG(VB_GENERAL, LOG_NOTICE,
+            QString("Verbose loglevel changed, new loglevel is: %1")
+                .arg(logLevelGetName(logLevel)));
+
+        return result;
+    }
 
     return QString("ERROR: See 'help %1' for usage information")
                    .arg(nc->getArg(0));
@@ -1435,6 +1480,7 @@
             "query time            - Query current time on frontend\r\n"
             "query uptime          - Query machine uptime\r\n"
             "query verbose         - Get current VERBOSE mask\r\n"
+            "query loglevel        - Get current VERBOSE loglevel\r\n"
             "query version         - Query Frontend version details\r\n"
             "query channels        - Query available channels\r\n"
             "query channels START LIMIT - Query available channels from START and limit results to LIMIT lines\r\n";
@@ -1442,11 +1488,11 @@
     else if (is_abbrev("set", command))
     {
         helpText +=
-            "set verbose debug-mask - "
-            "Change the VERBOSE mask to 'debug-mask'\r\n"
+            "set verbose debug-mask - Change the VERBOSE mask to 'debug-mask'\r\n"
             "                         (i.e. 'set verbose playback,audio')\r\n"
             "                         use 'set verbose default' to revert\r\n"
-            "                         back to the default level of\r\n";
+            "                         back to the default level of\r\n"
+            "set loglevel level     - Change the VERBOSE loglevel to 'level'\r\n";
     }
     else if (is_abbrev("screenshot", command))
     {
