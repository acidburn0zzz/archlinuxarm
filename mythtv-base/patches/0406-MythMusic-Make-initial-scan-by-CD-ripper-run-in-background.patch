diff -Naur mythtv-master-20210518-gc8c226c9b4-old/mythplugins/mythmusic/mythmusic/cdrip.cpp mythtv-master-20210518-gc8c226c9b4-new/mythplugins/mythmusic/mythmusic/cdrip.cpp
--- mythtv-master-20210518-gc8c226c9b4-old/mythplugins/mythmusic/mythmusic/cdrip.cpp	2021-05-18 16:13:25.663333270 +0200
+++ mythtv-master-20210518-gc8c226c9b4-new/mythplugins/mythmusic/mythmusic/cdrip.cpp	2021-05-18 16:13:27.916666603 +0200
@@ -524,6 +524,7 @@
 Ripper::Ripper(MythScreenStack *parent, QString device) :
     MythScreenType(parent, "ripcd"),
     m_tracks(new QVector<RipTrack*>),
+    m_isCompilation(false),
     m_cdDevice(std::move(device))
 {
 #ifndef _WIN32
@@ -631,7 +632,7 @@
     m_qualityList->SetValueByData(QVariant::fromValue(
                         gCoreContext->GetNumSetting("DefaultRipQuality", 1)));
 
-    QTimer::singleShot(500ms, this, &Ripper::startScanCD);
+    QTimer::singleShot(50ms, this, &Ripper::startScanCD);
 
     return true;
 }
@@ -749,6 +750,12 @@
     QString message = tr("Scanning CD. Please Wait ...");
     OpenBusyPopup(message);
 
+    m_artistName.clear();
+    m_albumName.clear();
+    m_genreName.clear();
+    m_year.clear();
+    m_isCompilation = false;
+
     m_scanThread = new CDScannerThread(this);
     connect(m_scanThread->qthread(), &QThread::finished, this, &Ripper::ScanFinished);
     m_scanThread->start();
@@ -760,82 +767,16 @@
     delete m_scanThread;
     m_scanThread = nullptr;
 
-    m_tracks->clear();
-
-    if (m_scanThread)
-    {
-        m_scanThread->wait();
-        delete m_scanThread;
-    }
-
-    if (m_ejectThread)
-    {
-        m_ejectThread->wait();
-        delete m_ejectThread;
-    }
-
-    if (m_decoder)
-    {
-        bool isCompilation = false;
-
-        m_artistName.clear();
-        m_albumName.clear();
-        m_genreName.clear();
-        m_year.clear();
-
-        for (int trackno = 0; trackno < m_decoder->getNumTracks(); trackno++)
-        {
-            auto *ripTrack = new RipTrack;
-
-            MusicMetadata *metadata = m_decoder->getMetadata(trackno + 1);
-            if (metadata)
-            {
-                ripTrack->metadata = metadata;
-                ripTrack->length = metadata->Length();
-
-                if (metadata->Compilation())
-                {
-                    isCompilation = true;
-                    m_artistName = metadata->CompilationArtist();
-                }
-                else if (m_artistName.isEmpty())
-                {
-                    m_artistName = metadata->Artist();
-                }
-
-                if (m_albumName.isEmpty())
-                    m_albumName = metadata->Album();
-
-                if (m_genreName.isEmpty() && !metadata->Genre().isEmpty())
-                    m_genreName = metadata->Genre();
-
-                if (m_year.isEmpty() && metadata->Year() > 0)
-                    m_year = QString::number(metadata->Year());
-
-                QString title = metadata->Title();
-                ripTrack->isNew = isNewTune(m_artistName, m_albumName, title);
-
-                ripTrack->active = ripTrack->isNew;
-
-                m_tracks->push_back(ripTrack);
-
-            }
-            else
-                delete ripTrack;
-        }
-
-        m_artistEdit->SetText(m_artistName);
-        m_albumEdit->SetText(m_albumName);
-        m_genreEdit->SetText(m_genreName);
-        m_yearEdit->SetText(m_year);
-        m_compilationCheck->SetCheckState(isCompilation);
-
-        if (!isCompilation)
-            m_switchTitleArtist->SetVisible(false);
-        else
-            m_switchTitleArtist->SetVisible(true);
-    }
+    m_artistEdit->SetText(m_artistName);
+    m_albumEdit->SetText(m_albumName);
+    m_genreEdit->SetText(m_genreName);
+    m_yearEdit->SetText(m_year);
+    m_compilationCheck->SetCheckState(m_isCompilation);
 
+    if (!m_isCompilation)
+        m_switchTitleArtist->SetVisible(false);
+    else
+        m_switchTitleArtist->SetVisible(true);
     BuildFocusList();
     updateTrackList();
 
@@ -854,8 +795,48 @@
 
     delete m_decoder;
     m_decoder = new CdDecoder("cda", nullptr, nullptr);
-    if (m_decoder)
-        m_decoder->setDevice(m_cdDevice);
+    if (!m_decoder)
+        return;
+
+    m_decoder->setDevice(m_cdDevice);
+
+    m_tracks->clear();
+    for (int trk = 0, trks = m_decoder->getNumTracks(); trk < trks; ++trk)
+    {
+        MusicMetadata *metadata = m_decoder->getMetadata(trk + 1);
+        if (metadata)
+        {
+            RipTrack *ripTrack = new RipTrack;
+            ripTrack->metadata = metadata;
+            ripTrack->length = metadata->Length();
+
+            if (metadata->Compilation())
+            {
+                m_isCompilation = true;
+                m_artistName = metadata->CompilationArtist();
+            }
+            else if (m_artistName.isEmpty())
+            {
+                m_artistName = metadata->Artist();
+            }
+
+            if (m_albumName.isEmpty())
+                m_albumName = metadata->Album();
+
+            if (m_genreName.isEmpty() && !metadata->Genre().isEmpty())
+                m_genreName = metadata->Genre();
+
+            if (m_year.isEmpty() && metadata->Year() > 0)
+                m_year = QString::number(metadata->Year());
+
+            QString title = metadata->Title();
+            ripTrack->isNew = isNewTune(m_artistName, m_albumName, title);
+
+            ripTrack->active = ripTrack->isNew;
+
+            m_tracks->push_back(ripTrack);
+        }
+    }
 }
 
 void Ripper::deleteAllExistingTracks(void)
diff -Naur mythtv-master-20210518-gc8c226c9b4-old/mythplugins/mythmusic/mythmusic/cdrip.h mythtv-master-20210518-gc8c226c9b4-new/mythplugins/mythmusic/mythmusic/cdrip.h
--- mythtv-master-20210518-gc8c226c9b4-old/mythplugins/mythmusic/mythmusic/cdrip.h	2021-05-18 16:13:25.633333270 +0200
+++ mythtv-master-20210518-gc8c226c9b4-new/mythplugins/mythmusic/mythmusic/cdrip.h	2021-05-18 16:13:27.919999936 +0200
@@ -173,6 +173,7 @@
     QString            m_artistName;
     QString            m_genreName;
     QString            m_year;
+    bool               m_isCompilation;
     QStringList        m_searchList;
     bool               m_somethingwasripped  {false};
     bool               m_mediaMonitorActive  {false};
