
This is hack for H6 issue sees as distorted (tiling-like displayed with linear scan) - but observed 
only on X11 with Glamour. EGLFS works OK.

Currently empty "IN_FORMATS" property (no list of modifiers) gives distorted screen.
This hack adds property list with linear modifier as the only member and this fixes issue.

In my opinion this is bug as modifiers concept it "default+differentiator" type of concept where: if
both sides (consumer-provider) are using default - differentiator can be absent OR empty.
Current observations IMHO are showing wrong behaviour for absence of modifier case.

diff -Naur linux-5.10.9-old/drivers/gpu/drm/sun4i/sun8i_ui_layer.c linux-5.10.9-new/drivers/gpu/drm/sun4i/sun8i_ui_layer.c
--- linux-5.10.9-old/drivers/gpu/drm/sun4i/sun8i_ui_layer.c	2021-01-22 11:03:01.206665635 +0100
+++ linux-5.10.9-new/drivers/gpu/drm/sun4i/sun8i_ui_layer.c	2021-01-22 10:36:01.093332327 +0100
@@ -307,6 +307,11 @@
 	DRM_FORMAT_XRGB8888,
 };
 
+static const uint64_t sun8i_layer_modifiers[] = {
+	DRM_FORMAT_MOD_LINEAR,
+	DRM_FORMAT_MOD_INVALID
+};
+
 struct sun8i_ui_layer *sun8i_ui_layer_init_one(struct drm_device *drm,
 					       struct sun8i_mixer *mixer,
 					       int index)
@@ -329,7 +334,7 @@
 				       &sun8i_ui_layer_funcs,
 				       sun8i_ui_layer_formats,
 				       ARRAY_SIZE(sun8i_ui_layer_formats),
-				       NULL, type, NULL);
+				       sun8i_layer_modifiers, type, NULL);
 	if (ret) {
 		dev_err(drm->dev, "Couldn't initialize layer\n");
 		return ERR_PTR(ret);
diff -Naur linux-5.10.9-old/drivers/gpu/drm/sun4i/sun8i_vi_layer.c linux-5.10.9-new/drivers/gpu/drm/sun4i/sun8i_vi_layer.c
--- linux-5.10.9-old/drivers/gpu/drm/sun4i/sun8i_vi_layer.c	2021-01-22 11:03:01.903332301 +0100
+++ linux-5.10.9-new/drivers/gpu/drm/sun4i/sun8i_vi_layer.c	2021-01-22 10:37:39.323332329 +0100
@@ -471,6 +471,11 @@
 	DRM_FORMAT_YVU422,
 };
 
+static const uint64_t sun8i_layer_modifiers[] = {
+	DRM_FORMAT_MOD_LINEAR,
+	DRM_FORMAT_MOD_INVALID
+};
+
 struct sun8i_vi_layer *sun8i_vi_layer_init_one(struct drm_device *drm,
 					       struct sun8i_mixer *mixer,
 					       int index)
@@ -497,7 +502,8 @@
 	ret = drm_universal_plane_init(drm, &layer->plane, 0,
 				       &sun8i_vi_layer_funcs,
 				       formats, format_count,
-				       NULL, DRM_PLANE_TYPE_OVERLAY, NULL);
+				       sun8i_layer_modifiers,
+				       DRM_PLANE_TYPE_OVERLAY, NULL);
 	if (ret) {
 		dev_err(drm->dev, "Couldn't initialize layer\n");
 		return ERR_PTR(ret);
